var search_data = {"index":{"searchIndex":["fraccion","object","testfraccion","division()","gcd()","min_comun()","new()","producto()","reduc_num()","resta()","suma()","test_div()","test_prod()","test_resta()","test_suma()","test_to_s()","to_s()","readme","respuestas","created.rid"],"longSearchIndex":["fraccion","object","testfraccion","fraccion#division()","object#gcd()","fraccion#min_comun()","fraccion::new()","fraccion#producto()","fraccion#reduc_num()","fraccion#resta()","fraccion#suma()","testfraccion#test_div()","testfraccion#test_prod()","testfraccion#test_resta()","testfraccion#test_suma()","testfraccion#test_to_s()","fraccion#to_s()","","",""],"info":[["Fraccion","","Fraccion.html","",""],["Object","","Object.html","",""],["TestFraccion","","TestFraccion.html","",""],["division","Fraccion","Fraccion.html#method-i-division","(arg1, arg2)","<p>Metodo que devuelve un racional el cual es el resultado de la division\nefectuada con el objeto que invoca …\n"],["gcd","Object","Object.html#method-i-gcd","(u, v)",""],["min_comun","Fraccion","Fraccion.html#method-i-min_comun","(a, b)","<p>Metodo para realizar el Minimo Comun Multiplo\n"],["new","Fraccion","Fraccion.html#method-c-new","(arg1, arg2)","<p>Inicializacion del objeto con argumentos tomados desde la terminal. Para\nobtener la expresion minima, …\n"],["producto","Fraccion","Fraccion.html#method-i-producto","(arg1, arg2)","<p>Metodo que devuelve un racional el cual es el resultado de la\nmultiplicacion efectuada con el objeto …\n"],["reduc_num","Fraccion","Fraccion.html#method-i-reduc_num","(num1, denom1)","<p>Metodo para realizar la reduccion a la minima expresion\n"],["resta","Fraccion","Fraccion.html#method-i-resta","(arg1, arg2)","<p>Metodo que devuelve un racional el cual es el resultado de la resta\nefectuada con el objeto que invoca …\n"],["suma","Fraccion","Fraccion.html#method-i-suma","(arg1, arg2)","<p>Metodo que devuelve un racional el cual es el resultado de la suma\nefectuada con el objeto que invoca …\n"],["test_div","TestFraccion","TestFraccion.html#method-i-test_div","()","<p>Tests metodo division\n"],["test_prod","TestFraccion","TestFraccion.html#method-i-test_prod","()","<p>Tests metodo producto\n"],["test_resta","TestFraccion","TestFraccion.html#method-i-test_resta","()","<p>Tests metodo resta\n"],["test_suma","TestFraccion","TestFraccion.html#method-i-test_suma","()","<p>Tests metodo suma\n"],["test_to_s","TestFraccion","TestFraccion.html#method-i-test_to_s","()","<p>Tests metodo to_s\n"],["to_s","Fraccion","Fraccion.html#method-i-to_s","()","<p>Metodo que devuelve una cadena con la representacion racional.\n"],["README","","README_md.html","","<p>LPP - Practica 5\n<p>Enunciado: parte 1\n\n<pre>1) Clone el siguiente repositorio de &#39;github&#39; y siga las instrucciones ...</pre>\n"],["Respuestas","","Respuestas_txt.html","","<p>2.1. En la linea 3, al no ser v == 0, salta directamente a mostrar v, por\nlo que para que realmente haga …\n"],["created.rid","","doc/created_rid.html","",""]]}}